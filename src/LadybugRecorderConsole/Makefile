CXX = g++
CXXFLAGS := -Wall -Werror -pthread -fPIC -std=c++14
CXXFLAGS_REL := -O2 -DNDEBUG
CXXFLAGS_DEB := -ggdb -D_DEBUG
LDFLAGS := -Wl,--exclude-libs=ALL

OUTPUT_EXE = LadybugRecorderConsole${D}

SOFTWARE_LIB = /mnt/software-lib

# Include path
LADYBUG_API_INCLUDE = -I../../include -I/usr/include/ladybug
BOOST_INCLUDE = -isystem ${SOFTWARE_LIB}/Boost/boost_${BOOST_VERSION}
ALL_INCLUDE = ${LADYBUG_API_INCLUDE} ${BOOST_INCLUDE}

# Lib path
LADYBUG_LIB = -L../../lib -L/usr/lib/ladybug -lflycapture -lptgreyvideoencoder -lladybug${D} 

# Third party libs
BOOST_LIB = -L${SOFTWARE_LIB}/Boost/boost_${BOOST_VERSION}/GCC_5_3_1/linux_cpp11/release/amd64/lib -lboost_thread -lboost_date_time -lboost_system -lboost_filesystem
XERCES_LIB = -lxerces-c
ALL_LIBS = -Wl,-Bstatic ${BOOST_LIB} -Wl,-Bdynamic ${LADYBUG_LIB} ${XERCES_LIB}

# Precompiled header
GCHNAME = stdafx.h.gch

OBJDIR_REL = obj/rel
OBJDIR_DEB = obj/deb

# Ensure there is only 1 instance of the autogenerated file from XSD by removing all instances and adding it back once
ALL_CPP_FILES := $(wildcard *.cpp)
EXCLUDED_CPP_FILES := LadybugRecorderConsoleConfiguration.cpp
CPP_FILES := LadybugRecorderConsoleConfiguration.cpp $(filter-out $(EXCLUDED_CPP_FILES), $(ALL_CPP_FILES))
OBJ_FILES_REL := $(addprefix $(OBJDIR_REL)/,$(notdir $(CPP_FILES:.cpp=.o)))
OBJ_FILES_DEB := $(addprefix $(OBJDIR_DEB)/,$(notdir $(CPP_FILES:.cpp=.o)))

all: rel
rel: exe
deb: D=d
deb: exe_d

exe: make_obj_dir_rel ${GCHNAME} ${OBJ_FILES_REL} copy_xml
	@echo Creating executable
	${CXX} ${LDFLAGS} -o ${OUTPUT_EXE} ${OBJ_FILES_REL} ${ALL_LIBS}
	@echo Stripping unneeded symbols...
	@strip --strip-unneeded ${OUTPUT_EXE}
	@cp $(OUTPUT_EXE) ../../bin

exe_d: make_obj_dir_deb ${GCHNAME} ${OBJ_FILES_DEB} copy_xml
	@echo Creating executable
	${CXX} ${LDFLAGS} -o ${OUTPUT_EXE} ${OBJ_FILES_DEB} ${ALL_LIBS}
	@cp $(OUTPUT_EXE) ../../bin

copy_xml:
	@cp LadybugRecorderConsole-Sample.xml ../../bin/LadybugRecorderConsole.xml

${GCHNAME}: stdafx.h
	${CXX} ${CXXFLAGS} ${CXXFLAGS_REL} ${ALL_INCLUDE} -c stdafx.h

${OBJDIR_REL}/%.o: %.cpp
	${CXX} ${CXXFLAGS} ${CXXFLAGS_REL} ${ALL_INCLUDE} -c $< -o $@

${OBJDIR_DEB}/%.o: %.cpp
	${CXX} ${CXXFLAGS} ${CXXFLAGS_DEB} ${ALL_INCLUDE} -c $< -o $@

${OBJDIR_REL}/LadybugRecorderConsoleConfiguration.o: LadybugRecorderConsoleConfiguration.cpp
	${CXX} ${CXXFLAGS} ${CXXFLAGS_REL} ${ALL_INCLUDE} -c $< -o $@

${OBJDIR_DEB}/LadybugRecorderConsoleConfiguration.o: LadybugRecorderConsoleConfiguration.cpp
	${CXX} ${CXXFLAGS} ${CXXFLAGS_DEB} ${ALL_INCLUDE} -c $< -o $@

LadybugRecorderConsoleConfiguration.cpp: LadybugRecorderConsoleConfiguration.xsd
	xsdcxx cxx-tree --show-sloc --sloc-limit 10000 --output-dir . --proprietary-license --hxx-suffix .h --cxx-suffix .cpp --ixx-suffix .inl --fwd-suffix -fwd.h --namespace-map http://www.ptgrey.com=LRCConfig --generate-serialization --generate-ostream --generate-doxygen --generate-intellisense --type-naming ucc --function-naming java --std c++11 $<

make_obj_dir_rel:
	@mkdir -p $(OBJDIR_REL)

make_obj_dir_deb:
	@mkdir -p $(OBJDIR_DEB)

clean_obj:
	@rm -rf ${OBJ_FILES_REL} ${OBJ_FILES_DEB} obj ${GCHNAME} LadybugRecorderConsoleConfiguration.h LadybugRecorderConsoleConfiguration.cpp

clean: clean_obj
	@rm -f ../../bin/${OUTPUT_EXE}*
